spring:
  datasource:
    url: jdbc:postgresql://rc1b-aba7ujxtchgjaaf5.mdb.yandexcloud.net:6432/restaurant-service
    username: postgres1
    password: postgres1
  jpa:
    show-sql: false
    hibernate:
      ddl-auto: update
  application:
    name: restaurant-service
  kafka:
    bootstrap-servers:
      - "rc1a-42fgsrnd3sq3oa7g.mdb.yandexcloud.net:9091"
      - "rc1b-ce6nbs45l44u7mst.mdb.yandexcloud.net:9091"
      - "rc1c-af6obcpvq7vavhtk.mdb.yandexcloud.net:9091"
    consumer:
      group-id: orders_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        security.protocol: SASL_SSL
        sasl.mechanism: SCRAM-SHA-512
        sasl.jaas.config: org.apache.kafka.common.security.scram.ScramLoginModule required username="user-reader" password="user-reader";
        ssl.truststore.location: /etc/security/ssl
        ssl.truststore.password: changeit


topic:
  name:
    consumer: queueOrdersUsers


server:
  port: 6060

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: ${REGISTRY_SERVICE_URL:http://localhost:8761/eureka}